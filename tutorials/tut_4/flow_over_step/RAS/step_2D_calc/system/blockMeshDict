/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  8.0                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

scale 1;

//refinement variables
refine 1;

n1 #calc "$refine*50"; 
n2 #calc "$refine*5";
n3 #calc "$refine*70";
n4 #calc "$refine*5"; 
n5 #calc "$refine*10"; 
n6 1; 

//Define length variables
L1 5.0;            //domain length 1
L2 0.5;          //domain length 2, step width
L3 7.0;            //domain length 3
L4 0.6;          //domain length 4, step height
L5 1.0;            //domain length 5
L6 5.0;          //domain length 5, channel width

zFront 0.0;
zBack #calc "-1.0*$L6"; 

//Define vertex cordinates
x0 0.0;
x1 #calc "$L1";
x2 #calc "$L1";
x3 #calc "$L1+$L2";
x4 #calc "$L1+$L2";
x5 #calc "$L1+$L2+$L3";
x6 #calc "$L1+$L2+$L3";
x7 #calc "$L1+$L2+$L3";
x8 #calc "$L1+$L2";
x9 #calc "$L1";
x10 0.0;
x11 0.0;

y0 0.0;
y1 0.0;
y2 #calc "$L4";
y3 #calc "$L4";
y4 0.0;
y5 0.0;
y6 #calc "$L4";
y7 #calc "$L4+$L5";
y8 #calc "$L4+$L5";
y9 #calc "$L4+$L5";
y10 #calc "$L4+$L5";
y11 #calc "$L4";

gradingp1 1.0;
gradingp2 1.0;
gradingp3 1.0;
gradingp4 1.0;
gradingp5 1.0;
gradingp6 1.0;

vertices
(
    //vertex on the front
    ($x0   $y0  $zFront)  //pt 0
    ($x1   $y1  $zFront)  //pt 1
    ($x2   $y2  $zFront)  //pt 2
    ($x3   $y3  $zFront)  //pt 3
    ($x4   $y4  $zFront)  //pt 4
    ($x5   $y5  $zFront)  //pt 5
    ($x6   $y6  $zFront)  //pt 6
    ($x7   $y7  $zFront)  //pt 7
    ($x8   $y8  $zFront)  //pt 8
    ($x9   $y9  $zFront)  //pt 9
    ($x10  $y10 $zFront)  //pt 10
    ($x11  $y11 $zFront)  //pt 11

    //vertex on the back
    ($x0   $y0  $zBack)  //pt 12
    ($x1   $y1  $zBack)  //pt 13
    ($x2   $y2  $zBack)  //pt 14
    ($x3   $y3  $zBack)  //pt 15
    ($x4   $y4  $zBack)  //pt 16
    ($x5   $y5  $zBack)  //pt 17
    ($x6   $y6  $zBack)  //pt 18
    ($x7   $y7  $zBack)  //pt 19
    ($x8   $y8  $zBack)  //pt 20
    ($x9   $y9  $zBack)  //pt 21
    ($x10  $y10 $zBack)  //pt 22
    ($x11  $y11 $zBack)  //pt 23
);

blocks
(
    // block 1
    hex (12 13 14 23 0 1 2 11)
    block1 ( $n1 $n4 $n6 )  simpleGrading ($gradingp1 1 $gradingp3)

    // block 2
    hex (16 17 18 15 4 5 6 3)
    block2 ( $n3 $n4 $n6 )  simpleGrading (1 1 $gradingp3)

    // block 3
    hex (23 14 21 22 11 2 9 10)
    block3 ( $n1 $n5 $n6 )  simpleGrading (1 1 $gradingp3)

    // block 4
    hex (14 15 20 21 2 3 8 9)
    block4 ( $n2 $n5 $n6 )  simpleGrading (1 1 $gradingp3)

    // block 5
    hex (15 18 19 20 3 6 7 8)
    block5 ( $n3 $n5 $n6 )  simpleGrading (1 1 $gradingp3)
);

edges
(
);

patches
(
    patch inlet
    (
      (0 12 23 11)
      (11 23 22 10)
    )

    patch outlet 
    (
      (5 17 18 6)
      (6 18 19 7)
    )

    symmetryPlane top 
    (
      (10 22 21 9)
      (9 21 20 8)
      (8 20 19 7)
    )

    wall bottom
    (
      (0 12 13 1)
      (1 13 14 2)
      (2 14 15 3)
      (3 15 16 4)
      (4 16 17 5)
    )

    empty sides 
    (
      (0 1 2 11)
      (4 5 6 3)
      (11 2 9 10)
      (2 3 8 9)
      (3 6 7 8)

      (23 14 13 12)
      (15 18 17 16)
      (22 21 14 23)
      (21 20 15 14)
      (20 19 18 15)
    )
);

mergePatchPairs
(
);

// ************************************************************************* //
